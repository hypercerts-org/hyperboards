create table "public"."blueprints" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "admin_id" text not null,
    "form_values" json not null,
    "minter_address" text not null,
    "registry_id" uuid not null
);


alter table "public"."blueprints" enable row level security;

CREATE UNIQUE INDEX blueprints_pkey ON public.blueprints USING btree (id);

alter table "public"."blueprints" add constraint "blueprints_pkey" PRIMARY KEY using index "blueprints_pkey";

alter table "public"."blueprints" add constraint "blueprints_admin_id_fkey" FOREIGN KEY (admin_id) REFERENCES users(address) not valid;

alter table "public"."blueprints" validate constraint "blueprints_admin_id_fkey";

alter table "public"."blueprints" add constraint "blueprints_registry_id_fkey" FOREIGN KEY (registry_id) REFERENCES registries(id) ON DELETE CASCADE not valid;

alter table "public"."blueprints" validate constraint "blueprints_registry_id_fkey";

create policy "Enable read access for all users"
on "public"."blueprints"
as permissive
for select
to public
using (true);


create policy "Only owners of registry can add a blueprint to it"
on "public"."blueprints"
as permissive
for insert
to public
with check (((auth.jwt() ->> 'address'::text) IN ( SELECT registries.admin_id
   FROM registries
  WHERE (registries.id = blueprints.registry_id))));
